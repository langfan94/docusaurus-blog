"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6412],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),f=o,d=m["".concat(u,".").concat(f)]||m[f]||p[f]||a;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3353:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],i={title:"How to write your own Virtual DOM",date:new Date("2018-06-13T14:26:50.000Z"),tags:[]},u="How to write your own Virtual DOM",c={permalink:"/Virtual-DOM",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Virtual-DOM.md",source:"@site/blog/Virtual-DOM.md",title:"How to write your own Virtual DOM",description:"\u5f15\u7528\u6587\u7ae0\u94fe\u63a5",date:"2018-06-13T14:26:50.000Z",formattedDate:"June 13, 2018",tags:[],readingTime:.655,truncated:!1,authors:[],frontMatter:{title:"How to write your own Virtual DOM",date:"2018-06-13T14:26:50.000Z",tags:[]},prevItem:{title:"Element-Clickoutside",permalink:"/element-clickoutside"},nextItem:{title:"js \u5192\u6ce1\u548c\u6355\u83b7\u4e8b\u4ef6",permalink:"/captch-bubbling"}},s={authorsImageUrls:[]},p=[{value:"Representing our DOM Tree",id:"representing-our-dom-tree",level:2}],m={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060"},"\u5f15\u7528\u6587\u7ae0\u94fe\u63a5")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Virtual DOM is any kind of representation of a real DOM"),(0,a.kt)("li",{parentName:"ul"},"When we change something in our Virtual DOM Tree, we get a new Virtual Tree. Algorithm compares these two trees (old and new), finds differences and makes only necessary small changes to real DOM so it reflects virtual")),(0,a.kt)("h2",{id:"representing-our-dom-tree"},"Representing our DOM Tree"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"    <ul class=\u201dlist\u201d>\n        <li>item 1</li>\n        <li>item 2</li>\n    </ul>\n")),(0,a.kt)("p",null,"turn to Js Object"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"    { type: \u2018ul\u2019, props: { \u2018class\u2019: \u2018list\u2019 }, children: [\n        { type: \u2018li\u2019, props: {}, children: [\u2018item 1\u2019] },\n        { type: \u2018li\u2019, props: {}, children: [\u2018item 2\u2019] }\n    ] }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We represent DOM elements with objects like")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"    { type: \u2018\u2026\u2019, props: { \u2026 }, children: [ \u2026 ] }\n")))}f.isMDXComponent=!0}}]);